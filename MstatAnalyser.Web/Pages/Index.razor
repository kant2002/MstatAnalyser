@page "/"
@using Mono.Cecil;
@inject AnalysisManager AnalysisManager

<PageTitle>Index</PageTitle>

@if (AnalysisManager.FileName is null)
{
    <h1>Please select MSTat file for upload!</h1>
    <p>
        Add following to your project and look for `appname.mstat` in your `obj\Release` folder.
    </p>
<pre>
&lt;PropertyGroup&gt;
	&lt;IlcGenerateMstatFile&gt;true&lt;/IlcGenerateMstatFile&gt;
&lt;/PropertyGroup&gt;
</pre>
}
else
{
    <h1>Analysis of file @AnalysisManager.FileName</h1>
}

@if (errorMessage is not null)
{
    <div class="alert alert-danger" role="alert">
        @errorMessage
    </div>
}

@if (loading)
{
    <div class="spinner-border text-primary" role="status">
        <span class="visually-hidden">Loading...</span>
    </div>
}


Choose new file for analysis.

<InputFile OnChange="@SingleUpload" />

@if (AnalysisManager.ApplicationStats is not null)
{
    <text>Total: @(ByAssembly.Sum(_ => _.TotalSize).ToString("N0"))</text>
    <AssemblyStatsView ApplicationStats="AnalysisManager.ApplicationStats" />
    @**@
}

@code {
    private string? errorMessage;
    private bool loading;
    private IList<AssemblyStats> ByAssembly => AnalysisManager.ApplicationStats!.AssemblyStats;

    private async Task SingleUpload(InputFileChangeEventArgs e)
    {
        errorMessage = null;
        loading = true;
        try
        {
            MemoryStream ms = new MemoryStream();
            await e.File.OpenReadStream(maxAllowedSize: 30 * 1024 * 1024).CopyToAsync(ms);
            ms.Position = 0;
            AnalysisManager.OpenFile(e.File.Name, ms);
        }
        catch (Exception ex)
        {
            errorMessage = ex.ToString();
        }
        finally
        {
            loading = false;
        }
    }
}
